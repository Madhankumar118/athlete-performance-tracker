{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhan\\\\athlete-performance-tracker\\\\athlete-tracker-frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const {\n    login\n  } = useContext(AuthContext);\n  const handleChange = e => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      await axios.post('http://localhost:8080/api/auth/register', formData);\n\n      // Auto login after registration\n      const loginRes = await axios.post('http://localhost:8080/api/auth/login', formData);\n      const {\n        token\n      } = loginRes.data;\n      login(token);\n      navigate('/dashboard'); // ✅ Redirect to dashboard\n    } catch (err) {\n      var _err$response;\n      setError('Registration failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || 'Something went wrong'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        placeholder: \"Username\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"HqE9U26A8HdCsxUrHNoUNMvJR+I=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useContext","axios","useNavigate","AuthContext","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","password","error","setError","navigate","login","handleChange","e","prev","target","name","value","handleSubmit","preventDefault","post","loginRes","token","data","err","_err$response","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","type","style","color","_c","$RefreshReg$"],"sources":["C:/Users/madhan/athlete-performance-tracker/athlete-tracker-frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\n\nconst Register = () => {\n  const [formData, setFormData] = useState({ username: '', password: '' });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const { login } = useContext(AuthContext);\n\n  const handleChange = (e) => {\n    setFormData(prev => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      await axios.post('http://localhost:8080/api/auth/register', formData);\n\n      // Auto login after registration\n      const loginRes = await axios.post('http://localhost:8080/api/auth/login', formData);\n      const { token } = loginRes.data;\n\n      login(token);\n      navigate('/dashboard'); // ✅ Redirect to dashboard\n    } catch (err) {\n      setError('Registration failed: ' + (err.response?.data || 'Something went wrong'));\n    }\n  };\n\n  return (\n    <div className=\"auth-form\">\n      <h2>Register</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"username\"\n          placeholder=\"Username\"\n          value={formData.username}\n          onChange={handleChange}\n          required\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={formData.password}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">Register</button>\n      </form>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}