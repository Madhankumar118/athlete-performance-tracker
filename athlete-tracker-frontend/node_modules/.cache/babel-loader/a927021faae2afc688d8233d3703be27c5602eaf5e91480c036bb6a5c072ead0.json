{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhan\\\\athlete-performance-tracker\\\\athlete-tracker-frontend\\\\src\\\\components\\\\Performance\\\\PerformanceForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport performanceService from '../../services/performanceService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PerformanceForm = ({\n  athleteId,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    metricType: '',\n    value: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!athleteId) return alert('Select an athlete first');\n    try {\n      await performanceService.add({\n        athleteId,\n        metricType: formData.metricType,\n        value: parseFloat(formData.value),\n        timestamp: new Date().toISOString()\n      });\n      onClose();\n    } catch (error) {\n      alert('Failed to save performance data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Performance Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"metricType\",\n        placeholder: \"Metric Type (e.g., speed)\",\n        value: formData.metricType,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"value\",\n        type: \"number\",\n        step: \"any\",\n        placeholder: \"Value\",\n        value: formData.value,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        className: \"btn-secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(PerformanceForm, \"29DFMhax8kn/RVxgRGgYifcfrx4=\");\n_c = PerformanceForm;\nexport default PerformanceForm;\nvar _c;\n$RefreshReg$(_c, \"PerformanceForm\");","map":{"version":3,"names":["React","useState","performanceService","jsxDEV","_jsxDEV","PerformanceForm","athleteId","onClose","_s","formData","setFormData","metricType","value","handleChange","e","name","target","prev","handleSubmit","preventDefault","alert","add","parseFloat","timestamp","Date","toISOString","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","type","step","onClick","_c","$RefreshReg$"],"sources":["C:/Users/madhan/athlete-performance-tracker/athlete-tracker-frontend/src/components/Performance/PerformanceForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport performanceService from '../../services/performanceService';\n\nconst PerformanceForm = ({ athleteId, onClose }) => {\n  const [formData, setFormData] = useState({\n    metricType: '',\n    value: '',\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!athleteId) return alert('Select an athlete first');\n    try {\n      await performanceService.add({\n        athleteId,\n        metricType: formData.metricType,\n        value: parseFloat(formData.value),\n        timestamp: new Date().toISOString(),\n      });\n      onClose();\n    } catch (error) {\n      alert('Failed to save performance data');\n    }\n  };\n\n  return (\n    <div className=\"modal\">\n      <h3>Add Performance Data</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"metricType\"\n          placeholder=\"Metric Type (e.g., speed)\"\n          value={formData.metricType}\n          onChange={handleChange}\n          required\n        />\n        <input\n          name=\"value\"\n          type=\"number\"\n          step=\"any\"\n          placeholder=\"Value\"\n          value={formData.value}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">Save</button>\n        <button type=\"button\" onClick={onClose} className=\"btn-secondary\">Cancel</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PerformanceForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}